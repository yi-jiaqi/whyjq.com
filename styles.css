:root {
    --grid-padding: 2vw;
}

body,html {
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    overflow: hidden;
}

canvas {
    display: block;
}

.grid-container {
    position: relative;
    transition: width 0.5s ease, height 0.5s ease, gap 0.5s ease;
    display: grid;
    /* gap: var(--grid-gap); */
    padding: var(--grid-padding);
    width: var(--grid-container-width, 100%);
    /* Fallback to 100% if variable is not set */
    height: var(--grid-container-height, auto);
    /* Fallback to auto if variable is not set */
    gap: var(--grid-gap);
    margin: auto;
    justify-content: start;
    align-items: start;
    grid-template-columns: repeat(auto-fill, minmax(var(--grid-size), 1fr));
    grid-gap: var(--grid-gap);
    grid-auto-rows: var(--grid-size);
}



.grid-item.bg-white:hover {
    /* background-color: white; */
    grid-template-columns: repeat(auto-fill, minmax(var(--grid-size), 1fr));
    transition: background-color 0.3s ease;
}

.grid-item.bg-white {
  /* background-color: white; */
  position: relative;
}

.grid-item.bg-white::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border: 2px solid #000;
  clip-path: polygon(0% 0%, 0% 0%, 0% 0%);
  transition: none;
}

.grid-item.bg-white:hover::before {
  animation: drawBorder 1s forwards;
}

@keyframes drawBorder {
  0% {
    clip-path: polygon(0% 0%, 0% 0%, 0% 0%, 0% 0%);
  }
  25% {
    clip-path: polygon(0% 0%, 100% 0%, 100% 0%, 0% 0%);
  }
  50% {
    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 0%);
  }
  75% {
    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
  }
  100% {
    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
  }
}

.grid-item {
    position: relative;
    /* Your existing styles */
    display: flex;
    overflow: hidden;
    justify-content: center;
    align-items: center;
    /* Ensure there's space for the coordinate span */
    border: 1.2px dotted #ccc;
    width: var(--grid-size);
    /* Dynamically set from JS */
    height: var(--grid-size);
    /* Ensure square grid items */
    /* background-color: white; */
    flex-direction: column;
    transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
}

.grid-item-title {
    position: absolute;
    bottom: 0.1vw;
    right: 0.1vw;
    color: black;
    /* Example: Adjust based on your design */
    text-shadow:
        -1px -1px 0 #fff,
        1px -1px 0 #fff,
        -1px 1px 0 #fff,
        1px 1px 0 #fff;
    font-size: calc(var(--grid-size) / 16);
    /* Adjust this calculation as needed */
    max-width: 100%;
    word-wrap: break-word;
    text-align: center;
    padding: 0.2vw;
    /* background-color: white;  */
    /* For better readability */
    /* border-radius: 4px; */
    box-sizing: border-box;
    font-family: 'helvetica';
}


.grid-item-full-image.visible {
    opacity: 1;
    /* Fully visible */
}




.hidden {
    opacity: 0;
    transform: scale(0.95);
}

.visible {
    opacity: 1;
    transform: scale(1);
}

.object-content {
    width: auto;
    /* Fill the width of its parent */
    height: auto;
    /* Fill the height of its parent */
    position: relative;
    /* Position it to cover the grid item area */
    display: flex;
    /* Enables flexbox layout */
    justify-content: center;
    /* Center horizontally */
    align-items: center;
    /* Center vertically */
    top: 0;
    left: 0;
}

.object-content svg {
    width: 100%;
    height: auto;
    /* or 100% depending on the desired aspect ratio */
    max-width: 100%;
    /* To ensure it doesn't overflow its container */
    max-height: 100%;
    flex: 1 1 auto;
}



.full-screen {
    width: 100vw;
    height: 100vh;
    position: fixed;
    /* Cover the entire viewport */
    top: 0;
    left: 0;
}

.material-symbols-outlined {
    font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 24;
    /* font-size: calc(var(--grid-size) / 2);  */
    width: calc(var(--grid-size))*2;
    padding-bottom: 5px;
    /* Adds space below the icon */
    display: block;
    /* Makes the icon span behave like a block element, placing text below */
}

.typea-content {
    text-align: center;
    /* Centers the content */
    display: flex;
    /* Use flexbox to center-align items vertically and horizontally */
    flex-direction: column;
    /* Stack items vertically */
    justify-content: center;
    /* Center items vertically */
    align-items: center;
    /* Center items horizontally */
}

.typea-text-below {
    font-size: calc(var(--grid-size) / 11);
    /* Set the size of the text */
    color: #000;
    /* Set the color of the text */
    display: block;
    /* Ensure the text occupies its own line */
    padding-bottom: 10px;
    /* Optional: add if you want more space below the text */
    font-family: 'helvetica';
    color: #000;
    position: relative;
}

.typea-content {
    font-family: 'Helvetica', sans-serif;
    color: #000;
    position: relative;
}

.typea-text-top,
.typea-text-below {
    display: block;
    /* Each text on a new line */
    text-align: left;
}

.typea-text-top {
    font-size: larger;
    /* Make the top text slightly larger */
}

/* .typea-text-below {
    font-size: smaller;
} */

.typea-svg-container {
    display: block;
    /* Ensures the SVG is on a new line if needed */
}


.grid-item-full-image {
    display: none;
    /* Hidden by default */
    /* position: absolute; */
    /* top: var(--grid-gap);
    left: var(--grid-gap); */
    width: 100%;
    height: 100%;
    z-index: 10;

    transition: opacity 0.5s ease-in-out;
    /* Ensure it is above other content */
    /* background-size: cover; */
    /* background-position: center; */
}

.grid-container:hover .grid-item-full-image {
    display: block;
    /* Show on hover */
}


#pdf-modal-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(5px);
    display: none;
    z-index: 999;
}
#pdf-modal {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%;
    height: auto;
    max-height: 80%;
    background-color: white;
    box-shadow: 0 18px 36px rgba(0, 0, 0, 0.5);
    overflow: hidden;
    z-index: 1000;
}
#pdf-canvas {
    width: 100%;
}
.page-control {
    position: absolute;
    bottom: 70px;
    background: rgba(255, 255, 255, 0.7);
    color: black;
    padding: 5px 10px;
    border-radius: 5px;
    font-family: Arial, sans-serif;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    cursor: pointer;
}
#prev-page {
    left: 20%;
    transform: translateX(-50%);
}
#next-page {
    left: 80%;
    transform: translateX(-50%);
}
#page-indicator {
    bottom: 70px;
    left: 50%;
    transform: translateX(-50%);
}
#page-slider {
    position: absolute;
    bottom: 30px;
    left: 50%;
    transform: translateX(-50%);
    width: 80%;
    background: rgba(255, 255, 255, 0.7);
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    z-index: 2;
}
#page-slider::-webkit-slider-runnable-track {
    width: 100%;
    height: 8px;
    cursor: pointer;
    background: #ccc;
    border-radius: 5px;
}
#page-slider::-webkit-slider-thumb {
    border: 1px solid #000;
    height: 20px;
    width: 20px;
    border-radius: 50%;
    background: #fff;
    cursor: pointer;
    margin-top: -6px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}
.tick-container {
    position: absolute;
    bottom: 28px; /* Adjusted to account for the slider track height */
    left: 50%;
    transform: translateX(-50%);
    width: calc(80% - 6px); /* Adjusted to account for the thumb indicator radius */
    display: flex;
    justify-content: space-between;
    pointer-events: none; /* Prevents tick marks from capturing mouse events */
    z-index: 1;
    margin-left: 2px; /* Adjusted to account for the thumb indicator radius */
    margin-right: 4px; /* Adjusted to account for the thumb indicator radius */
}
.tick {
    width: 6px;
    height: 16px;
    background: #ccc;
}




@media only screen and (max-width: 600px) {
    .typea-text-below {
        font-size: 0.5rem; /* Adjust the font size for smaller screens */
    }
    .grid-item-title{
        font-size: calc(var(--grid-size) / 9);
    }
}